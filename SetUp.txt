How to Create Full-Stack Project Foundation

BackEnd:

Step 1: mkdir <project-name>

Step 2: cd into <project-name>

Step 3: touch ReadMe.md 

Step 4: run code . 

Step 5: mkdir server

Step 6: cd into server

Step 7: touch models.py
        touch config.py
        touch app.py
        touch seed.py
 
Step 8: run pipenv install

Step 9: git init
        git add . 
        git commit -m 'backend basics'

Step 10: setup config.py 
    
    from flask import Flask
    from flask_cors import CORS
    from flask_migrate import Migrate
    from flask_restful import Api
    from flask_sqlalchemy import SQLAlchemy
    from sqlalchemy import MetaData

    app = Flask(__name__)
    app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///app.db'
    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
    app.json.compact = False

    metadata = MetaData(naming_convention={
        "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s",
    })

    db = SQLAlchemy(metadata=metadata)
    migrate = Migrate(app, db)
    db.init_app(app)
    api = Api(app)
    CORS(app)`


Step 11: setup app.py

    from flask import request, make_response
    from flask_restful import Resource 
    from sqlalchemy.exc import IntegrityError

    from config import app, db, api
    from models import 

    class Home(Resource):
        def get(self):
            return 'HomePage'
        
    api.add_resource(Home, '/')

    if __name__ == '__main__':
    app.run(port=5555, debug=True)    


Step 12: Setup models.py
    from sqlalchemy.orm import validates
    from sqlalchemy.ext.associationproxy import association_proxy
    from sqlalchemy_serializer import SerializerMixin
    from config import db


Step 13: Setup seed.py
    from sqlalchemy import create_engine
    from sqlalchemy.orm import sessionmaker
    from app import app
    from models import db,


    db.session.add_all()
    db.session.add_all()
    db.session.add_all()
    db.session.commit()

    print('Seeding Successful!')


Step 14: Build out models.py 

Step 15: Build out app.py

Step 16: Build out seed.py

Step 17: Enter pipenv shell and cd into server and run: 
         pipenv install flask flask-sqlalchemy flask-migrate 
         sqlalchemy-serializer flask-restful flask-cors

Step 18: Run flask db init

Step 19: Run flask db revison --autogenerate -m 'models'

Step 20: Run flask db upgrade head

Step 21: Run python seed.py 

Step 22: Check app.db to make sure tables seeded correctly 

Step 23: git add .
         git commit -m 'tables seeded'